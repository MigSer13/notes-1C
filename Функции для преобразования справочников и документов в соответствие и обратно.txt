Функции для преобразования справочников и документов в соответствие и обратно
Публикация № 1542460
Функции для преобразования справочников и документов в соответствие и обратно. Предназначены для передачи данных между одинаковыми и не очень конфигурациями или как очередной вариант сохранения (архивирования) объектов перед редактированием с последующим восстановлением.
Задумывались для передачи объектов через web или http сервисов между базами 1С. Также можно использовать для разных конфигураций, для чего понадобится небольшая доработка для получения названий справочников конфигурации приемника.
+ бонусом процедура определения значений простого типа:) 
Советы:
Для уменьшения размера при передаче можно предварительно поместить в сжатое хранилище значений:
Хранилище = Новый ХранилищеЗначения(СоответствиеОбмен,Новый СжатиеДанных(9));
Кроме того хранилище хорошо сериализуется в XML строку, с которой тоже можно делать много полезного.
При создании элемента справочника при загрузке используется СтрЗаменить(ПолноеИмяОбъекта,"Справочник.",""), тут можно вызвать процедуру для описания соответствий имен справочников и документов разных конфигураций
Внимание: Не отлажено на 100%, черновой вариант - больше для описания концепции.
 
  Функция определения сложности типа и получения соответствия имени
Функция ЭтоЗначениеПростогоТипа(ТекЗначение) Экспорт
	Возврат ТипЗнч(ТекЗначение) = Тип("Число") 
	ИЛИ ТипЗнч(ТекЗначение) = Тип("Булево") 
	ИЛИ ТипЗнч(ТекЗначение) = Тип("Дата") 
	ИЛИ ТипЗнч(ТекЗначение) = Тип("Строка")
	ИЛИ ТекЗначение = Неопределено;
КонецФункции

Функция ПолучитьИмяСправочникаРасширения(ИмяСправочника) Экспорт
	//Соответствие = Новый Соответствие();
	Возврат "nlgm_"+ИмяСправочника;
КонецФункции
  
  Функция для помещения объекта в соответствие
Функция ПолучитьСоответствиеИзОбъекта(знач ТекОбъект,МассивЭлементов=Неопределено) Экспорт
	Если МассивЭлементов<>Неопределено И МассивЭлементов.Найти(ТекОбъект)<>Неопределено И НЕ ЭтоЗначениеПростогоТипа(ТекОбъект) Тогда
		Возврат Строка(ТекОбъект.Метаданные().ПолноеИмя()+"^"+ТекОбъект.УникальныйИдентификатор());
	ИначеЕсли МассивЭлементов = Неопределено Тогда
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить(ТекОбъект);
	КонецЕсли;
	МассивЭлементов.Добавить(ТекОбъект);
	Если ТипЗнч(ТекОбъект) = Тип("УникальныйИдентификатор") Тогда
		Возврат Строка(ТекОбъект);
	ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(ТекОбъект)) Тогда
		Возврат ТекОбъект.Метаданные().ПолноеИмя()+"."+Строка(ТекОбъект);
	КонецЕсли;
	
	Соответствие = Новый Соответствие(); /// реквизиты     
    Для каждого Реквизит из ТекОбъект.Метаданные().Реквизиты Цикл
		Если ЭтоЗначениеПростогоТипа(ТекОбъект[Реквизит.Имя])Тогда
			Соответствие.Вставить(Реквизит.Имя, ТекОбъект[Реквизит.Имя]);
		ИначеЕсли ТипЗнч(ТекОбъект[Реквизит.Имя]) = Тип("ХранилищеЗначения") Тогда
			Соответствие.Вставить(Реквизит.Имя, XMLСтрока(ТекОбъект[Реквизит.Имя]));
		Иначе
			Соответствие.Вставить(Реквизит.Имя, ПолучитьСоответствиеИзОбъекта(ТекОбъект[Реквизит.Имя],МассивЭлементов));
		КонецЕсли;
    КонецЦикла; /// таблицы     
	Для Каждого ТабличнаяЧасть из ТекОбъект.Метаданные().ТабличныеЧасти Цикл
		МассивСтрок = Новый Массив; ДанныеСтрокой = "";
		Для Каждого ТекСтрока Из ТекОбъект[ТабличнаяЧасть.Имя] Цикл
			СоответствиеСтроки = Новый Соответствие;
			Для Каждого ТекКолонка Из ТекОбъект.Метаданные().ТабличныеЧасти[ТабличнаяЧасть.Имя].Реквизиты Цикл
				Если ЭтоЗначениеПростогоТипа(ТекСтрока[ТекКолонка.Имя])Тогда
					СоответствиеСтроки.Вставить(ТекКолонка.Имя, ТекСтрока[ТекКолонка.Имя]);
				ИначеЕсли ТипЗнч(ТекСтрока[ТекКолонка.Имя]) = Тип("ХранилищеЗначения") Тогда
					СоответствиеСтроки.Вставить(ТекКолонка.Имя, XMLСтрока(ТекСтрока[ТекКолонка.Имя]));
				Иначе
					СоответствиеСтроки.Вставить(ТекКолонка.Имя, ПолучитьСоответствиеИзОбъекта(ТекСтрока[ТекКолонка.Имя],МассивЭлементов));
				КонецЕсли;
				ДанныеСтрокой = ДанныеСтрокой+"~"+Строка(СоответствиеСтроки[ТекКолонка.Имя]);
			КонецЦикла;
			МассивСтрок.Добавить(СоответствиеСтроки);
			ДанныеСтрокой = ДанныеСтрокой+Символы.ПС; 
		КонецЦикла;
		Соответствие.Вставить(ТабличнаяЧасть.Имя,МассивСтрок);
		Соответствие.Вставить(ТабличнаяЧасть.Имя+"Строкой",ДанныеСтрокой);  //Содержимое таб. части для облегчения отладки
    КонецЦикла;
    Соответствие.Вставить("ИмяМетаданныеОбъекта",ТекОбъект.Метаданные().ПолноеИмя());
   	Соответствие.Вставить("УникальныйИдентификатор",Строка(ТекОбъект.УникальныйИдентификатор()));
	Для Каждого стРеквизит Из ТекОбъект.Метаданные().СтандартныеРеквизиты Цикл
		Если ЗначениеЗаполнено(ТекОбъект[стРеквизит.Имя]) И стРеквизит.Имя<>"Предопределенный" И стРеквизит.Имя<>"Ссылка" Тогда
			Соответствие.Вставить(стРеквизит.Имя,ТекОбъект[стРеквизит.Имя]);
		КонецЕсли;
    КонецЦикла;		
	
	Возврат Соответствие;
КонецФункции
 
 
  Функция для получения объекта из соответствия
Функция ПолучитьОбъектИзСоостветствия(вхСоответствие) Экспорт
	
	ПолноеИмяОбъекта = вхСоответствие["ИмяМетаданныеОбъекта"];
	УникальныйИдентификатор = Новый УникальныйИдентификатор(вхСоответствие["УникальныйИдентификатор"]);
	Если СтрНайти(ПолноеИмяОбъекта,"Справочник") Тогда
		ИмяДляСоздания = ПолучитьИмяСправочникаРасширения(СтрЗаменить(ПолноеИмяОбъекта,"Справочник.",""));
		СсылкаНаОбъект = Справочники[ИмяДляСоздания].ПолучитьСсылку(УникальныйИдентификатор);
		Если ЗначениеЗаполнено(СсылкаНаОбъект) И СсылкаНаОбъект.ПолучитьОбъект()=Неопределено Тогда
			ТекОбъект = Справочники[ИмяДляСоздания].СоздатьЭлемент();
			ТекОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
		ИначеЕсли ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
			ТекОбъект = СсылкаНаОбъект.ПолучитьОбъект();
		Иначе
			Возврат "";
		КонецЕсли;
	ИначеЕсли СтрНайти(ПолноеИмяОбъекта,"Документ") Тогда	
		ИмяДляСоздания = СтрЗаменить(ПолноеИмяОбъекта,"Документ.","");
		СсылкаНаОбъект = Документы[ИмяДляСоздания].ПолучитьСсылку(УникальныйИдентификатор);
		Если СсылкаНаОбъект.ПолучитьОбъект()=Неопределено Тогда
			ТекОбъект = Документы[ИмяДляСоздания].СоздатьДокумент();
			ТекОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
		Иначе
			ТекОбъект = СсылкаНаОбъект.ПолучитьОбъект();
		КонецЕсли;
	КонецЕсли;
	Для Каждого стРеквизит Из ТекОбъект.Метаданные().СтандартныеРеквизиты Цикл
		Если ЗначениеЗаполнено(вхСоответствие[стРеквизит.Имя]) И стРеквизит.Имя<>"Предопределенный" И стРеквизит.Имя<>"Ссылка" Тогда
			ТекОбъект[стРеквизит.Имя] = вхСоответствие[стРеквизит.Имя];
		КонецЕсли;
    КонецЦикла;		
		
	Для Каждого элСоответсвия Из вхСоответствие Цикл
		Если ТекОбъект.Метаданные().Реквизиты.Найти(элСоответсвия.Ключ)<>Неопределено Тогда
			Если ТипЗнч(элСоответсвия.Значение) = Тип("Соответствие") И ЗначениеЗаполнено(элСоответсвия.Значение.Получить("ИмяМетаданныеОбъекта")) Тогда
				ЗначениеЭлСоостветствия = ПолучитьОбъектИзСоостветствия(элСоответсвия.Значение);			
			ИначеЕсли ТипЗнч(элСоответсвия.Значение) = Тип("Строка") И СтрНайти(элСоответсвия.Значение,"^")<>0 Тогда
				МассивВхСтроки = СтрРазделить(элСоответсвия.Значение,"^");
				ПолноеИмяОбъекта = МассивВхСтроки[0];
				УникальныйИдентификатор = Новый УникальныйИдентификатор(МассивВхСтроки[1]);
				ИмяДляСоздания = ПолучитьИмяСправочникаРасширения(СтрЗаменить(ПолноеИмяОбъекта,"Справочник.",""));
				Если Метаданные.Справочники.Найти(ИмяДляСоздания)<>Неопределено Тогда
					ЗначениеЭлСоостветствия = Справочники[ИмяДляСоздания].ПолучитьСсылку(УникальныйИдентификатор);
				Иначе
					Продолжить;
				КонецЕсли;
			Иначе
				ЗначениеЭлСоостветствия = элСоответсвия.Значение
			КонецЕсли;
			ТекОбъект[элСоответсвия.Ключ] = ЗначениеЭлСоостветствия;	
		ИначеЕсли ТекОбъект.Метаданные().ТабличныеЧасти.Найти(элСоответсвия.Ключ)<>Неопределено Тогда
			ТекТабЧасть = элСоответсвия.Значение;
			ТекОбъект[элСоответсвия.Ключ].Очистить();
			Для Каждого СтрокаТабЧасти Из ТекТабЧасть Цикл
				НовСтрока = ТекОбъект[элСоответсвия.Ключ].Добавить();
				Для Каждого ТекКолонкаТабЧасти Из СтрокаТабЧасти Цикл
					Если ТипЗнч(ТекКолонкаТабЧасти.Значение) = Тип("Соответствие") И ЗначениеЗаполнено(ТекКолонкаТабЧасти.Значение.Получить("ИмяМетаданныеОбъекта")) Тогда
						ЗначениеЭлСоостветствия = ПолучитьОбъектИзСоостветствия(ТекКолонкаТабЧасти.Значение);	
					ИначеЕсли ТипЗнч(ТекКолонкаТабЧасти.Значение) = Тип("Строка") И СтрНайти(ТекКолонкаТабЧасти.Значение,"^")<>0 Тогда
						МассивВхСтроки = СтрРазделить(ТекКолонкаТабЧасти.Значение,"^");
						ПолноеИмяОбъекта = МассивВхСтроки[0];
						УникальныйИдентификатор = Новый УникальныйИдентификатор(МассивВхСтроки[1]);
						ИмяДляСоздания = ПолучитьИмяСправочникаРасширения(СтрЗаменить(ПолноеИмяОбъекта,"Справочник.",""));
						ЗначениеЭлСоостветствия = Справочники[ИмяДляСоздания].ПолучитьСсылку(УникальныйИдентификатор);
					Иначе
						ЗначениеЭлСоостветствия = ТекКолонкаТабЧасти.Значение
					КонецЕсли;
					НовСтрока[ТекКолонкаТабЧасти.Ключ] = ЗначениеЭлСоостветствия;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ТекОбъект.Записать();
	Возврат ТекОбъект.Ссылка;
	
КонецФункции
 

10.11.2021:  Функция помещения в соответствия модернизирована: добавлена защита от зацикливания и описание работы с некоторыми типами значений реквизитов. Перед использований обратите внимания, что возможно потребуется отладка и доработка функции возвращения обратно в объект, ее пока не правил.
+17 –
     
 


Комментарии
 В избранное  Подписаться на ответы Сортировка: Древо развёрнутое  
Свернуть все
1.  the1  941 01.11.21 10:27
Вот это
Если СтрНайти(Объект.Метаданные().ПолноеИмя(),"Справочник")<>0 Тогда
           Соответствие.Вставить("Наименование",Объект.Наименование);
           Соответствие.Вставить("Код",Объект.Код);
    ИначеЕсли СтрНайти(Объект.Метаданные().ПолноеИмя(),"Документ")<>0 Тогда    
           Соответствие.Вставить("Номер",Объект.Номер);
           Соответствие.Вставить("Дата",Объект.Дата);
    КонецЕсли;

лучше заменить на
Для Каждого Реквизит Из Объект.Метаданные().СтандартныеРеквизиты Цикл
    Соответствие.Вставить(Реквизит.Имя, Объект[Реквизит.Имя]);
КонецЦикла;

т.к. у справочника например может не быть кода и/или наименования

